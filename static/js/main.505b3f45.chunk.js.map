{"version":3,"sources":["components/Header/Header.module.sass","components/SendForm/SendForm.module.sass","components/SearchPanel/SearchPanel.module.sass","components/Header/Header.js","components/Tasks/TaskItem/TasksItem.js","components/Tasks/Tasks.js","components/SendForm/SendForm.js","components/SearchPanel/SearchPanel.js","components/App/App.js","index.js"],"names":["module","exports","Header","props","state","buttons","key","name","label","Buttons","this","map","el","clazz","stateFilter","css","active","notActive","type","onClick","onFilterSelect","className","allTasks","completedTasks","Header_buttons","Component","TasksItem","elementText","onDelete","onToggleCompleted","classNamesBlock","classNamesButton","classStrikeThrough","completed","Tasks","tasks","elemetsPosts","element","id","text","SendForm","onValueChange","bind","onSubmit","event","defaultHeight","setState","target","value","style","height","scrollHeight","padding","e","preventDefault","addTask","form","textarea","onChange","placeholder","SearchPanel","onUpdateSearch","onUpdateSearchApp","textareaBlock","term","ClearTextarea","App","filter","deleteItem","filterPost","searchPost","maxId","length","index","findIndex","elem","slice","task","newTask","newItem","arrTasks","item","indexOf","filtersTasks","visiblePost","typeTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.505b3f45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2vMJB\",\"Header_buttons\":\"Header_Header_buttons__2VomX\",\"notActive\":\"Header_notActive__44CXO\",\"active\":\"Header_active__2lgqf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SendForm_form__3Bh3U\",\"textarea\":\"SendForm_textarea__2CDTW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaBlock\":\"SearchPanel_textareaBlock__3WNdA\",\"textarea\":\"SearchPanel_textarea__1cGzT\"};","import React, {Component} from 'react';\nimport css from './Header.module.sass';\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buttons: [\n                {key: 1, name: 'all', label: \"All\"},\n                {key: 2, name: 'not-completed', label: \"Be in progress\"},\n                {key: 3, name: 'completed', label: \"Completed\"}\n            ]\n        }\n    }\n\n\n    render() {\n        const Buttons = this.state.buttons.map ( (el) => {\n            let clazz = this.props.stateFilter === el.name ? css.active : css.notActive;\n\n            return (\n                <button key = {el.key}\n                        name={el.name}\n                        type='button'\n                        onClick={() => this.props.onFilterSelect(el.name)}\n                        className={clazz}\n                > {el.label} </button >\n            );\n        });\n\n\n        return (\n            <div className={css.Header}>\n                <div>\n                    <h1>Your tasks:</h1>\n                    <h1>{this.props.allTasks} tasks, {this.props.completedTasks} completed </h1>\n                </div>\n\n\n                <div className={css.Header_buttons}>\n                    {Buttons}\n                </div>\n            </div>\n        );\n    };\n};\n\n\n\n\n\n\n","import React, {Component} from 'react';\nimport './TasksItem.sass';\n\nexport default class TasksItem extends Component {\n    render() {\n        const {elementText, onDelete, onToggleCompleted, completed} = this.props;\n\n        let classNamesBlock = \"block\";\n        let classNamesButton = \"fa fa-check\";\n        let classStrikeThrough = \"classStrikeThroughNone\"\n        if (completed) {\n            classNamesButton += \" Completed\";\n            classNamesBlock = \"CompletedBlock\"\n            classStrikeThrough = \"classStrikeThrough\"\n        }\n\n        return (\n            <div className={classNamesBlock}>\n                <div className={classStrikeThrough}><span>{elementText}</span></div>\n                <div>\n                    <button type=\"button\" onClick={onToggleCompleted} className={\"TasksItemButton\"}><i\n                        className={classNamesButton}></i></button>\n                    <button type=\"button\" onClick={onDelete} className={\"TasksItemButton\"}><i\n                        className={\"fa fa-trash-o\"}></i></button>\n                </div>\n            </div>\n        );\n    }\n};\n\n","import React from 'react';\nimport './Tasks.sass';\nimport TasksItem from \"./TaskItem/TasksItem\";\n\nconst Tasks = ({tasks, onDelete, onToggleCompleted}) => {\n    const elemetsPosts = tasks.map((element) => {\n        return (\n            <div>\n                <TasksItem key={element.id}\n                           elementText={element.text}\n                           onDelete={() => onDelete(element.id)}\n                           onToggleCompleted={() => onToggleCompleted(element.id)}\n                           completed = { element.completed }/>\n            </div>\n        );\n    });\n\n    return (\n        <div>\n            {elemetsPosts}\n        </div>\n    );\n}\n\nexport default Tasks;\n","import React, {Component} from 'react';\nimport css from './SendForm.module.sass';\n\n\nexport default class SendForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: ''\n        }\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    // onValueChange(event) {\n    //     console.log(event.target.value)\n    // }\n\n    // onValueChange(event) {\n    //     this.setState({\n    //         text: event.target.value\n    //     });\n    // };\n\n    // setInputHeight(event, defaultHeight) {\n    //     if (event) {\n    //         const target = event.target ? event.target : event;\n    //         target.style.height = defaultHeight;\n    //         target.style.height = `${target.scrollHeight}px`;\n    //\n    //         if (target.style.height > defaultHeight) {\n    //             target.style.padding = `15px`;\n    //         }\n    //     }\n    // };\n    // onChange={ (event) => this.setInputHeight(event, '50px')}\n\n    onValueChange(event, defaultHeight) {\n        this.setState({\n            text: event.target.value\n        });\n\n        //динамическое изменение текстареа в зависимости от введнных туда символов\n        if (event) {\n            const target = event.target ? event.target : event;\n            target.style.height = defaultHeight;\n            target.style.height = `${target.scrollHeight}px`;\n\n            if (target.style.height > defaultHeight) {\n                target.style.padding = `15px`;\n            }\n            if (target.value === '' ) {\n                target.style.height = `50px`;\n                target.style.padding = `5px 15px`;\n            }\n\n        }\n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.props.addTask(this.state.text);\n        this.setState({\n            text: ''\n        });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.onSubmit}>\n                <div className={css.form}>\n                    <div className={css.textarea}>\n                        <textarea\n                            value={this.state.text}\n                            onChange={(event) => this.onValueChange(event, '50px')}\n                            placeholder={\"type your task...\"}/></div>\n                    <button type={\"submit\"}>Add task</button>\n                </div>\n            </form>\n        );\n    }\n\n\n}\n\n","import React, {Component} from 'react';\nimport css from './SearchPanel.module.sass';\n\n\nexport default class SearchPanel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    }\n\n    //onUpdateSearch============================================================\n    // onUpdateSearch(el) {\n    //     let text = el.target.value;\n    //     this.setState( () => {\n    //         return {\n    //             term: text\n    //         }\n    //     } );\n    //\n    //     // this.props.onUpdateSearchApp();\n    // };\n\n    //or\n\n    onUpdateSearch(el) {\n        // this.setState( {term: el.target.value});\n        this.props.onUpdateSearchApp(el.target.value);\n    };\n    //onUpdateSearch============================================================\n\n\n    ClearTextarea() {\n        this.props.onUpdateSearchApp('');\n    }\n\n    render() {\n        // console.log(this.state.term);\n        return (\n            <div className={css.textareaBlock}>\n               <textarea className={css.textarea}\n                         value={this.props.term}\n                         onChange={this.onUpdateSearch}\n                         placeholder={\"Find your task...\"}/>\n                <button type={\"reset\"} onClick={ () => this.ClearTextarea() }>Clean</button>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\nimport './App.sass';\n\n//Components\nimport Header from \"../Header/Header\";\nimport Tasks from \"../Tasks/Tasks\";\nimport SendForm from \"../SendForm/SendForm\";\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [\n                {id: 0, text: 'сделать уроки', completed: false},\n                {id: 1, text: 'Убрать дома', completed: false},\n                {id: 2, text: 'Поміть посуду', completed: false},\n                {id: 3, text: 'погулять', completed: false},\n                {id: 4, text: 'футбол', completed: false},\n                {id: 5, text: 'английский', completed: false},\n                {id: 6, text: 'покушать', completed: false}\n            ],\n            filter: \"all\",\n            term: ''\n        };\n        this.deleteItem = this.deleteItem.bind(this);\n        this.addTask = this.addTask.bind(this);\n        this.onToggleCompleted = this.onToggleCompleted.bind(this);\n        this.filterPost = this.filterPost.bind(this);\n        this.onFilterSelect = this.onFilterSelect.bind(this);\n        this.searchPost = this.searchPost.bind(this);\n        this.onUpdateSearchApp = this.onUpdateSearchApp.bind(this);\n\n        this.maxId = this.state.tasks.length;\n    }\n\n    deleteItem(id) {\n        this.setState(({tasks}) => {\n            const index = tasks.findIndex(elem => elem.id === id);\n\n            const newArr = [...tasks.slice(0, index), ...tasks.slice(index + 1)];\n\n            return {\n                tasks: newArr\n            };\n        });\n    };\n\n    addTask(task) {\n        const newTask = {\n            id: this.maxId++,\n            text: task,\n            completed: false\n        };\n\n        this.setState(({tasks}) => {\n            if (task !== '') {\n                const newArr = [newTask, ...tasks];\n\n                return {\n                    tasks: newArr\n                }\n            }\n        })\n    };\n\n    onToggleCompleted(id) {\n        this.setState(({tasks}) => {\n            const index = tasks.findIndex((element) => element.id === id);\n\n            const newItem = {...tasks[index], completed: !tasks[index].completed};\n\n            const newArr = [...tasks.slice(0, index), newItem, ...tasks.slice(index + 1)];\n\n            return {\n                tasks: newArr\n            };\n        });\n    }\n\n    filterPost(arrTasks, filter) {\n        if (filter === 'completed') {\n            return arrTasks.filter(arrTasks => arrTasks.completed === true);\n        } else if (filter === 'not-completed') {\n            return arrTasks.filter(arrTasks => arrTasks.completed === false);\n        } else {\n            return arrTasks;\n        }\n    };\n\n    onFilterSelect(name) {\n        this.setState(() => {\n            return {\n                filter: name\n            }\n        });\n    };\n\n    searchPost(item, term) {\n        if (term.length === 0) {\n            return item\n        }\n\n        return item.filter((el) => el.text.indexOf(term) > -1 );\n    };\n\n    onUpdateSearchApp(term) {\n        this.setState(() => {\n            return {\n                term: term\n            }\n        })\n    }\n\n\n    render() {\n        // console.log(this.state);\n        // console.log(this.state.term);\n\n        const allTasks = this.state.tasks.length;\n        const completedTasks = this.state.tasks.filter((element) => element.completed).length;\n        const filtersTasks = this.filterPost(this.state.tasks, this.state.filter);\n        const visiblePost = this.searchPost(filtersTasks, this.state.term);\n\n\n        return (\n            <div className=\"App\">\n                <Header\n                    stateFilter={this.state.filter}\n                    onFilterSelect={this.onFilterSelect}\n                    allTasks={allTasks}\n                    completedTasks={completedTasks}/>\n                <SearchPanel\n                    term = { this.state.term }\n                    onUpdateSearchApp={this.onUpdateSearchApp}/>\n                <SendForm\n                    typeTask={this.state.tasks.typeTask}\n                    addTask={this.addTask}/>\n                <Tasks\n                    tasks={visiblePost}\n                    onDelete={this.deleteItem}\n                    onToggleCompleted={this.onToggleCompleted}/>\n            </div>\n        );\n    };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}